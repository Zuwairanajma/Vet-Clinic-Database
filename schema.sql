-- Create a database named vet_clinic.

CREATE DATABASE vet_clinic;

-- Create a table named animals
CREATE TABLE animals (
    id INT,
    name varchar(60),
    date_of_birth DATE,
    escape_attempts INT,
    neutered BOOLEAN,
    weight_kg DECIMAL,
    PRIMARY KEY(id)
);

-- Query and Update Animals TABLE

ALTER TABLE animals 
    ADD species varchar(60);

-- Query multiple TABLES
CREATE TABLE owners (
    id SERIAL PRIMARY KEY,
    full_name VARCHAR(255), -- Increase VARCHAR length
    age INT
);

CREATE TABLE species (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) -- Increase VARCHAR length
);

-- Remove species column inside the animal table
ALTER TABLE animals
DROP COLUMN species;

-- Add column species_id which is a foreign key referencing species table 
ALTER TABLE animals
ADD COLUMN species_id INT REFERENCES
species(id);

-- Add column owner_id which is a foreign key referencing the owners table
ALTER TABLE animals
ADD COLUMN owner_id INT REFERENCES owners(id);

CREATE TABLE vets (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    age INT,
    date_of_graduation DATE
);


-- Create a "join table" called specializations to handle this relationship
CREATE TABLE specializations (
    id serial PRIMARY KEY,
    species_id INT REFERENCES species(id),
    vet_id INT REFERENCES vets(id)
);

-- Create a "join table" called visits to handle this relationship, it should also keep track of the date of the visit
CREATE TABLE visits (
    id serial PRIMARY KEY,
    animal_id INT REFERENCES animals(id),
    vet_id INT REFERENCES vets(id),
    date_of_visit DATE
);

ALTER TABLE owners
ADD COLUMN email VARCHAR(120);

-- create index to improve performance 
CREATE INDEX visits_animal_id ON visits(animal_id ASC);
CREATE INDEX visits_vet_id ON visits(vet_id);
CREATE INDEX owners_email ON owners(email);